# Example of server configuration file
# Real configuration file must be located in same directory and it must be named `server.properties`


aes.key=<256 bit key>
# Default: AB61498184100BBE904FC1B81C8CFD2A08B5F5226042AC117E9C84E6F86BF830
# You can generate key, using `java -jar server.jar --generateKey <bits>`
# To generate 256 bit key, use `java -jar server.jar --generateKey 256`
# NOTE: Same key must be specified in client configuration!


db.url=<url without "http://" and "https://"; website or IP address>/<database>
# Default: 127.0.0.1/messaje

db.user=<user, that has full access to specified earlier database>
# Default: werryx
# To create that user, available only on MySQL server device (server will start only in device, where MySQL server is started), write this SQL query:
#   CREATE USER '<user_name>'@'localhost' IDENTIFIED BY '<password>';
# To create user, available from internet (server will start in any device, that can connect to MySQL server), write this SQL query:
#   CREATE USER '<user_name>'@'%' IDENTIFIED BY '<password>';
# Now, when you created user, you should grant permissions to that user by writing:
#   GRANT ALL PRIVILEGES ON messaje.* TO '<user_name>'@'<"localhost" or "%", that you specified earlier>;
# NOTE: If something is not working, try to create database "messaje" (more details in Messaje/server/src/com/werryxgames/messaje/Database.java)

db.password=<password for user, specified earlier>
# Default: 1234
# If you created user, using previous instruction, simply use password (that you used instead of "<password>")


server.host=<IP address or domain name, that this device can bind to>
# Default: 0.0.0.0 (it means all possible IP addresses, that this device can bind to)
# Should match client, or simple be "0.0.0.0"

server.port=<port of server>
# Default: 9451
# Must be same in both client and server configurations

server.maxPendingConnections=<max pending connections>
# Default: 8
# Maximum number of clients, that can wait, until they will be connected to server
# If connection queue is full, nobody can connect, but if one client connected right after, another one client can connect
# This is not about maximum number of connected clients


# To apply configuration, write `java -jar server.jar --saveConfig`
